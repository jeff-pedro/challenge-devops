name: Build Aluraflix API

on:
  pull_request:
  # workflow_dispatch:

defaults:
  run:
    working-directory: ./app

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: aluraflix-api

jobs:
  # test:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       python-version: [3.7, 3.8]
  #       os: ['ubuntu-latest']

  #   steps:
  #     - name: Check out app code
  #       uses: actions/checkout@v4

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt

  #     - name: Set up database and Load data
  #       run: |
  #         python manage.py makemigrations
  #         python manage.py migrate
  #         python manage.py loaddata ./aluraflix/fixtures/programas_iniciais.json

  #     - name: Run tests
  #       run: |
  #         python manage.py test

  build:
    # needs: test
    name: Build Docker image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          printf '{ "image": { "uri": "${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}" }' > image.json

      - run: ls ./
    
      - name: Upload a image metadata artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: image
          path: ./app/image.json
          

  deploy:
    # needs: test
    uses: ./.github/workflows/deploy-ecs.yml
    secrets: inherit
